# Generated by Django 5.0.2 on 2025-04-25 15:29

import datetime
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ChartOfAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("account_type", models.CharField(max_length=50)),
                ("code", models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="FeatureUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("feature_name", models.CharField(max_length=100)),
                ("usage_count", models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Holiday",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("date", models.DateField()),
                (
                    "recurring_yearly",
                    models.BooleanField(
                        default=True,
                        help_text="If True, this holiday occurs on the same date every year",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Holiday",
                "verbose_name_plural": "Holidays",
            },
        ),
        migrations.CreateModel(
            name="ShiftMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Day Shift", "Day Shift"),
                            ("Night Shift", "Night Shift"),
                            ("Custom Shift", "Custom Shift"),
                        ],
                        max_length=50,
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                (
                    "shift_duration",
                    models.DecimalField(decimal_places=2, default=8.0, max_digits=5),
                ),
                (
                    "break_duration",
                    models.DurationField(default=datetime.timedelta(seconds=1800)),
                ),
                (
                    "grace_period",
                    models.DurationField(default=datetime.timedelta(seconds=900)),
                ),
                (
                    "work_days",
                    models.CharField(
                        choices=[
                            ("Weekdays", "Monday to Friday"),
                            ("All Days", "Monday to Saturday"),
                            ("Custom", "Custom Days"),
                        ],
                        default="Weekdays",
                        max_length=20,
                    ),
                ),
                (
                    "custom_work_days",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated day numbers (0=Monday, 6=Sunday)",
                        max_length=20,
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Shift",
                "verbose_name_plural": "Shifts",
            },
        ),
        migrations.CreateModel(
            name="SystemError",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("error_message", models.TextField()),
                ("error_time", models.DateTimeField(auto_now_add=True)),
                ("resolved", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="SystemUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("peak_time_start", models.DateTimeField()),
                ("peak_time_end", models.DateTimeField()),
                ("active_users_count", models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Vendor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("service", models.CharField(blank=True, max_length=100)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("phone", models.CharField(blank=True, max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="Break",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "break_type",
                    models.CharField(
                        choices=[
                            ("Tea Break 1", "Tea Break 1"),
                            ("Lunch/Dinner Break", "Lunch/Dinner Break"),
                            ("Tea Break 2", "Tea Break 2"),
                        ],
                        max_length=50,
                    ),
                ),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("reason_for_extension", models.TextField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Break",
                "verbose_name_plural": "Breaks",
                "ordering": ["-start_time"],
            },
        ),
        migrations.CreateModel(
            name="ChatGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_groups",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClientProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_name", models.CharField(max_length=100)),
                ("contact_info", models.TextField()),
                ("industry_type", models.CharField(max_length=100)),
                (
                    "company_size",
                    models.CharField(
                        choices=[
                            ("Small", "Small"),
                            ("Medium", "Medium"),
                            ("Large", "Large"),
                        ],
                        default="Small",
                        max_length=50,
                    ),
                ),
                (
                    "registration_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "business_location",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("website_url", models.URLField(blank=True, null=True)),
                ("year_established", models.IntegerField(blank=True, null=True)),
                (
                    "annual_revenue",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="client_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DirectMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                (
                    "participants",
                    models.ManyToManyField(
                        related_name="direct_messages", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "shift",
                    models.CharField(
                        choices=[("Day", "Day"), ("Night", "Night")], max_length=10
                    ),
                ),
                ("leave_balance", models.IntegerField(default=18)),
                ("attendance_record", models.PositiveIntegerField(default=0)),
                ("late_arrivals", models.PositiveIntegerField(default=0)),
                ("early_departures", models.PositiveIntegerField(default=0)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FailedLoginAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("attempt_time", models.DateTimeField(auto_now_add=True)),
                ("ip_address", models.GenericIPAddressField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GlobalUpdate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("upcoming", "Upcoming"),
                            ("released", "Just Released"),
                            ("scheduled", "Scheduled"),
                        ],
                        max_length=20,
                    ),
                ),
                ("scheduled_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "managed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "permissions": [("manage_globalupdate", "Can manage Global Updates")],
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("text", "Text Message"),
                            ("file", "File Attachment"),
                            ("system", "System Message"),
                        ],
                        default="text",
                        max_length=20,
                    ),
                ),
                (
                    "file_attachment",
                    models.FileField(
                        blank=True, null=True, upload_to="chat_files/%Y/%m/%d/"
                    ),
                ),
                ("sent_at", models.DateTimeField(auto_now_add=True)),
                ("edited_at", models.DateTimeField(blank=True, null=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "direct_message",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="trueAlign.directmessage",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="trueAlign.chatgroup",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["sent_at"],
            },
        ),
        migrations.CreateModel(
            name="MessageRead",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="read_receipts",
                        to="trueAlign.message",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PasswordChange",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("old_password", models.CharField(max_length=255)),
                ("new_password", models.CharField(max_length=255)),
                ("change_time", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Presence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(default=django.utils.timezone.now)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("present", "Present"),
                            ("absent", "Absent"),
                            ("late", "Late"),
                            ("leave", "On Leave"),
                            ("wfh", "Work From Home"),
                            ("business_trip", "Business Trip"),
                        ],
                        default="absent",
                        max_length=20,
                    ),
                ),
                ("marked_at", models.DateTimeField(auto_now_add=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "marked_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="presence_marked",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="presences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-date", "user__first_name"],
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("start_date", models.DateField(default=django.utils.timezone.now)),
                ("deadline", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Completed", "Completed"),
                            ("In Progress", "In Progress"),
                            ("Pending", "Pending"),
                            ("On Hold", "On Hold"),
                        ],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "total_value",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("delivery_format", models.CharField(default="CSV", max_length=50)),
                (
                    "clients",
                    models.ManyToManyField(
                        limit_choices_to={"groups__name": "Client"},
                        related_name="projects_as_client",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClientPayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("reference_note", models.TextField(blank=True)),
                (
                    "received_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trueAlign.clientprofile",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="trueAlign.project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClientParticipation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("feedback", models.TextField(blank=True, null=True)),
                ("approved", models.BooleanField(default=False)),
                ("date", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="client_participations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="client_participations",
                        to="trueAlign.project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProjectAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assigned_date", models.DateField(auto_now_add=True)),
                ("hours_worked", models.FloatField(default=0.0)),
                (
                    "role_in_project",
                    models.CharField(
                        choices=[
                            ("Manager", "Manager"),
                            ("Employee", "Employee"),
                            ("Support", "Support"),
                            ("Appraisal", "Appraisal"),
                            ("QC", "QC"),
                        ],
                        default="Employee",
                        max_length=50,
                    ),
                ),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trueAlign.project",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="project",
            name="users",
            field=models.ManyToManyField(
                related_name="projects_assigned",
                through="trueAlign.ProjectAssignment",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="ProjectUpdate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("upcoming", "Upcoming"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                        ],
                        default="upcoming",
                        max_length=20,
                    ),
                ),
                ("scheduled_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trueAlign.project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RoleAssignmentAudit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("role_assigned", models.CharField(max_length=50)),
                ("assigned_date", models.DateTimeField(auto_now_add=True)),
                (
                    "assigned_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="role_assigned_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ShiftAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("effective_from", models.DateField()),
                ("effective_to", models.DateField(blank=True, null=True)),
                ("is_current", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "shift",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trueAlign.shiftmaster",
                    ),
                ),
            ],
            options={
                "verbose_name": "Shift Assignment",
                "verbose_name_plural": "Shift Assignments",
            },
        ),
        migrations.CreateModel(
            name="Attendance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Present", "Present"),
                            ("Absent", "Absent"),
                            ("Late", "Late"),
                            ("Half Day", "Half Day"),
                            ("On Leave", "On Leave"),
                            ("Work From Home", "Work From Home"),
                            ("Weekend", "Weekend"),
                            ("Holiday", "Holiday"),
                        ],
                        default="Absent",
                        max_length=20,
                    ),
                ),
                ("is_half_day", models.BooleanField(default=False)),
                ("leave_type", models.CharField(blank=True, max_length=50, null=True)),
                ("clock_in_time", models.DateTimeField(blank=True, null=True)),
                ("clock_out_time", models.DateTimeField(blank=True, null=True)),
                ("breaks", models.JSONField(default=list)),
                (
                    "total_hours",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "expected_hours",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                ("is_weekend", models.BooleanField(default=False)),
                ("is_holiday", models.BooleanField(default=False)),
                ("location", models.CharField(default="Office", max_length=50)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("device_info", models.JSONField(blank=True, null=True)),
                ("late_minutes", models.IntegerField(default=0)),
                ("last_modified", models.DateTimeField(auto_now=True)),
                ("regularization_reason", models.TextField(blank=True, null=True)),
                (
                    "regularization_status",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="attendance_modifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "shift",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="trueAlign.shiftmaster",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Support",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ticket_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "issue_type",
                    models.CharField(
                        choices=[
                            ("Hardware Issue", "Hardware Issue"),
                            ("Software Issue", "Software Issue"),
                            ("Network Issue", "Network Issue"),
                            ("Internet Issue", "Internet Issue"),
                            ("Application Issue", "Application Issue"),
                            ("HR Related Issue", "HR Related Issue"),
                            ("Access Management", "Access Management"),
                            ("Security Incident", "Security Incident"),
                            ("Service Request", "Service Request"),
                        ],
                        max_length=50,
                    ),
                ),
                ("subject", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("New", "New"),
                            ("Open", "Open"),
                            ("In Progress", "In Progress"),
                            ("Pending User Response", "Pending User Response"),
                            ("Pending Third Party", "Pending Third Party"),
                            ("On Hold", "On Hold"),
                            ("Resolved", "Resolved"),
                            ("Closed", "Closed"),
                        ],
                        default="New",
                        max_length=30,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("Low", "Low"),
                            ("Medium", "Medium"),
                            ("High", "High"),
                            ("Critical", "Critical"),
                        ],
                        default="Medium",
                        max_length=20,
                    ),
                ),
                (
                    "assigned_to",
                    models.CharField(
                        choices=[("HR", "HR"), ("Admin", "Admin")],
                        default="HR",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("due_date", models.DateTimeField(blank=True, null=True)),
                ("department", models.CharField(blank=True, max_length=100)),
                ("location", models.CharField(blank=True, max_length=100)),
                (
                    "asset_id",
                    models.CharField(
                        blank=True,
                        help_text="Related hardware/software asset ID",
                        max_length=50,
                    ),
                ),
                ("sla_breach", models.BooleanField(default=False)),
                ("resolution_summary", models.TextField(blank=True)),
                ("resolution_time", models.DurationField(blank=True, null=True)),
                (
                    "satisfaction_rating",
                    models.IntegerField(
                        blank=True,
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)],
                        null=True,
                    ),
                ),
                ("feedback", models.TextField(blank=True)),
                (
                    "assigned_to_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_tickets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent_ticket",
                    models.ForeignKey(
                        blank=True,
                        help_text="Parent ticket for related issues",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sub_tickets",
                        to="trueAlign.support",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tickets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Support Ticket",
                "verbose_name_plural": "Support Tickets",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="StatusLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_status",
                    models.CharField(
                        choices=[
                            ("New", "New"),
                            ("Open", "Open"),
                            ("In Progress", "In Progress"),
                            ("Pending User Response", "Pending User Response"),
                            ("Pending Third Party", "Pending Third Party"),
                            ("On Hold", "On Hold"),
                            ("Resolved", "Resolved"),
                            ("Closed", "Closed"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "new_status",
                    models.CharField(
                        choices=[
                            ("New", "New"),
                            ("Open", "Open"),
                            ("In Progress", "In Progress"),
                            ("Pending User Response", "Pending User Response"),
                            ("Pending Third Party", "Pending Third Party"),
                            ("On Hold", "On Hold"),
                            ("Resolved", "Resolved"),
                            ("Closed", "Closed"),
                        ],
                        max_length=30,
                    ),
                ),
                ("changed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "changed_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_logs",
                        to="trueAlign.support",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Timesheet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("week_start_date", models.DateField()),
                ("task_name", models.CharField(max_length=255)),
                (
                    "task_description",
                    models.TextField(
                        help_text="Detailed description of work performed"
                    ),
                ),
                ("hours", models.FloatField()),
                (
                    "adjusted_hours",
                    models.FloatField(
                        blank=True,
                        help_text="Hours adjusted by manager during review",
                        null=True,
                    ),
                ),
                (
                    "approval_status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Approved", "Approved"),
                            ("Partially_Approved", "Partially Approved"),
                            ("Rejected", "Rejected"),
                            ("Clarification_Requested", "Clarification Requested"),
                        ],
                        default="Pending",
                        max_length=25,
                    ),
                ),
                (
                    "rejection_reason",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Insufficient_Detail", "Insufficient Detail"),
                            ("Hours_Discrepancy", "Hours Discrepancy"),
                            ("Wrong_Project", "Wrong Project Allocation"),
                            ("Incomplete_Documentation", "Incomplete Documentation"),
                            ("Other", "Other"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                ("manager_comments", models.TextField(blank=True, null=True)),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "original_submission_id",
                    models.IntegerField(
                        blank=True,
                        help_text="ID of original submission if this is a resubmission",
                        null=True,
                    ),
                ),
                (
                    "version",
                    models.PositiveIntegerField(
                        default=1, help_text="Version number of this timesheet entry"
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timesheets",
                        to="trueAlign.project",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timesheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-week_start_date", "-version"],
                "permissions": [
                    ("approve_timesheet", "Can approve or reject timesheets"),
                    ("view_team_timesheets", "Can view timesheets for team members"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("income", "Income"),
                            ("expense", "Expense"),
                            ("transfer", "Transfer"),
                        ],
                        max_length=10,
                    ),
                ),
                ("date", models.DateField(auto_now_add=True)),
                ("description", models.TextField(blank=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="trueAlign.chartofaccount",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="trueAlign.project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserActionLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("create", "User Created"),
                            ("update", "User Updated"),
                            ("status_change", "Status Changed"),
                            ("role_change", "Role Changed"),
                            ("deactivate", "User Deactivated"),
                            ("activate", "User Activated"),
                            ("password_reset", "Password Reset"),
                        ],
                        max_length=20,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("details", models.TextField(blank=True, null=True)),
                (
                    "action_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="performed_actions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="UserDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dob", models.DateField(blank=True, null=True)),
                (
                    "blood_group",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "--------"),
                            ("A+", "A+"),
                            ("A-", "A-"),
                            ("B+", "B+"),
                            ("B-", "B-"),
                            ("AB+", "AB+"),
                            ("AB-", "AB-"),
                            ("O+", "O+"),
                            ("O-", "O-"),
                        ],
                        default="Unknown",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "--------"),
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Other", "Other"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("country_code", models.CharField(blank=True, max_length=5, null=True)),
                (
                    "contact_number_primary",
                    models.CharField(blank=True, max_length=13, null=True),
                ),
                (
                    "personal_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "address_line1",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "address_line2",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("city", models.CharField(blank=True, max_length=50, null=True)),
                ("state", models.CharField(blank=True, max_length=50, null=True)),
                ("postal_code", models.CharField(blank=True, max_length=10, null=True)),
                ("country", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "emergency_contact_primary",
                    models.CharField(blank=True, max_length=13, null=True),
                ),
                ("emergency_contact_address", models.TextField(blank=True, null=True)),
                (
                    "employee_type",
                    models.CharField(
                        blank=True,
                        choices=[("payroll", "Payroll"), ("contract", "Contract")],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("hire_date", models.DateField(blank=True, null=True)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("job_description", models.TextField(blank=True, null=True)),
                (
                    "work_location",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "employment_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "--------"),
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("terminated", "Terminated"),
                            ("resigned", "Resigned"),
                            ("suspended", "Suspended"),
                            ("absconding", "Absconding"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("panno", models.CharField(blank=True, max_length=10, null=True)),
                ("aadharno", models.CharField(blank=True, max_length=14, null=True)),
                ("onboarding_date", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("last_status_change", models.DateTimeField(blank=True, null=True)),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="auth.group",
                    ),
                ),
                (
                    "onboarded_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="onboarded_users",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_key", models.CharField(max_length=40)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("login_time", models.DateTimeField(default=django.utils.timezone.now)),
                ("logout_time", models.DateTimeField(blank=True, null=True)),
                ("working_hours", models.DurationField(blank=True, null=True)),
                ("idle_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "last_activity",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("location", models.CharField(blank=True, max_length=50, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("description", models.TextField(blank=True)),
                (
                    "paid_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="trueAlign.project",
                    ),
                ),
                (
                    "vendor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trueAlign.vendor",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GroupMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("admin", "Group Admin"), ("member", "Member")],
                        default="member",
                        max_length=20,
                    ),
                ),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("last_seen", models.DateTimeField(auto_now=True)),
                ("typing_status", models.DateTimeField(blank=True, null=True)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="trueAlign.chatgroup",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="group_memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("group", "user")},
            },
        ),
        migrations.CreateModel(
            name="Leave",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "leave_type",
                    models.CharField(
                        choices=[
                            ("Sick Leave", "Sick Leave"),
                            ("Casual Leave", "Casual Leave"),
                            ("Loss of Pay", "Loss of Pay"),
                            ("Emergency", "Emergency"),
                        ],
                        max_length=50,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("half_day", models.BooleanField(default=False)),
                (
                    "leave_days",
                    models.DecimalField(decimal_places=1, default=0, max_digits=4),
                ),
                ("reason", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Approved", "Approved"),
                            ("Rejected", "Rejected"),
                            ("Cancelled", "Cancelled"),
                        ],
                        default="Pending",
                        max_length=20,
                    ),
                ),
                ("rejection_reason", models.TextField(blank=True, null=True)),
                ("suggested_dates", models.JSONField(blank=True, null=True)),
                (
                    "documentation",
                    models.FileField(blank=True, null=True, upload_to="leave_docs/"),
                ),
                ("is_retroactive", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="leave_approvals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["user", "start_date", "status"],
                        name="trueAlign_l_user_id_12f441_idx",
                    )
                ],
            },
        ),
        migrations.AddIndex(
            model_name="message",
            index=models.Index(
                fields=["group", "sent_at"], name="trueAlign_m_group_i_fbe0af_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="message",
            index=models.Index(
                fields=["direct_message", "sent_at"],
                name="trueAlign_m_direct__968179_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="message",
            index=models.Index(
                fields=["sender", "sent_at"], name="trueAlign_m_sender__4a2cd7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="messageread",
            index=models.Index(
                fields=["user", "read_at"], name="trueAlign_m_user_id_339db3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="messageread",
            index=models.Index(
                fields=["message", "user"], name="trueAlign_m_message_bf6b93_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="messageread",
            unique_together={("message", "user")},
        ),
        migrations.AddConstraint(
            model_name="presence",
            constraint=models.UniqueConstraint(
                fields=("user", "date"), name="unique_presence_per_user_per_day"
            ),
        ),
        migrations.AddIndex(
            model_name="shiftassignment",
            index=models.Index(
                fields=["user", "effective_from"], name="trueAlign_s_user_id_f0dd6b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="shiftassignment",
            index=models.Index(
                fields=["is_current"], name="trueAlign_s_is_curr_9ea5e0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendance",
            index=models.Index(
                fields=["user", "date", "status"], name="trueAlign_a_user_id_ee39ce_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendance",
            index=models.Index(fields=["shift"], name="trueAlign_a_shift_i_93e8d1_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="attendance",
            unique_together={("user", "date")},
        ),
        migrations.AddIndex(
            model_name="support",
            index=models.Index(
                fields=["ticket_id"], name="trueAlign_s_ticket__676519_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="support",
            index=models.Index(fields=["status"], name="trueAlign_s_status_69e152_idx"),
        ),
        migrations.AddIndex(
            model_name="support",
            index=models.Index(
                fields=["created_at"], name="trueAlign_s_created_577e4c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="support",
            index=models.Index(fields=["user"], name="trueAlign_s_user_id_6fec4b_idx"),
        ),
        migrations.AddIndex(
            model_name="support",
            index=models.Index(
                fields=["due_date"], name="trueAlign_s_due_dat_c6bcc3_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="timesheet",
            unique_together={
                ("user", "week_start_date", "project", "task_name", "version")
            },
        ),
        migrations.AddIndex(
            model_name="usersession",
            index=models.Index(
                fields=["user", "login_time"], name="trueAlign_u_user_id_81ad70_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="usersession",
            index=models.Index(
                fields=["is_active"], name="trueAlign_u_is_acti_311e90_idx"
            ),
        ),
    ]
