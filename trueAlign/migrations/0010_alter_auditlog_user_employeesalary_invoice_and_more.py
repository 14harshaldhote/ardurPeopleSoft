# Generated by Django 5.0.2 on 2025-05-05 06:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('trueAlign', '0009_alter_auditlog_user'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='auditlog',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='EmployeeSalary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_from', models.DateField()),
                ('effective_to', models.DateField(blank=True, null=True)),
                ('gross_salary', models.DecimalField(decimal_places=2, max_digits=15)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_details', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Employee Salaries',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('reference_number', models.CharField(blank=True, max_length=50, null=True)),
                ('invoice_date', models.DateField()),
                ('due_date', models.DateField()),
                ('billing_address', models.TextField(blank=True, null=True)),
                ('shipping_address', models.TextField(blank=True, null=True)),
                ('client_gstin', models.CharField(blank=True, max_length=15, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('paid', 'Paid'), ('partially_paid', 'Partially Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='draft', max_length=15)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=15)),
                ('tax_total', models.DecimalField(decimal_places=2, max_digits=15)),
                ('discount_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('notes', models.TextField(blank=True, null=True)),
                ('terms_conditions', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(limit_choices_to={'entity_type': 'client'}, on_delete=django.db.models.deletion.PROTECT, related_name='client_invoices', to='trueAlign.entity')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_invoices', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceTax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_name', models.CharField(max_length=100)),
                ('tax_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taxes', to='trueAlign.invoice')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateField()),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('cheque', 'Cheque'), ('credit_card', 'Credit Card'), ('upi', 'UPI'), ('other', 'Other')], max_length=20)),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_payments', to=settings.AUTH_USER_MODEL)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='trueAlign.entity')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='payments', to='trueAlign.invoice')),
            ],
        ),
        migrations.CreateModel(
            name='ProductService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('item_type', models.CharField(choices=[('product', 'Product'), ('service', 'Service')], max_length=10)),
                ('hsn_sac', models.CharField(blank=True, max_length=20, null=True)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('tax_category', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Products & Services',
                'indexes': [models.Index(fields=['item_type', 'is_active'], name='trueAlign_p_item_ty_276601_idx')],
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('tax_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='trueAlign.invoice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='trueAlign.productservice')),
            ],
        ),
        migrations.CreateModel(
            name='SalaryComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('component_type', models.CharField(choices=[('earning', 'Earning'), ('deduction', 'Deduction')], max_length=10)),
                ('calculation_type', models.CharField(choices=[('fixed', 'Fixed Amount'), ('percentage', 'Percentage'), ('formula', 'Formula'), ('manual', 'Manual Entry')], max_length=10)),
                ('calculation_value', models.TextField(help_text='Value or formula for calculation')),
                ('calculation_base', models.CharField(blank=True, max_length=100, null=True)),
                ('is_taxable', models.BooleanField(default=False)),
                ('is_pf_applicable', models.BooleanField(default=False)),
                ('is_esi_applicable', models.BooleanField(default=False)),
                ('display_in_payslip', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'indexes': [models.Index(fields=['component_type', 'is_active'], name='trueAlign_s_compone_3df730_idx')],
            },
        ),
        migrations.CreateModel(
            name='EmployeeSalaryComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee_salary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='trueAlign.employeesalary')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='trueAlign.salarycomponent')),
            ],
        ),
        migrations.CreateModel(
            name='SalarySlip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField()),
                ('year', models.IntegerField()),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('working_days', models.IntegerField()),
                ('paid_days', models.DecimalField(decimal_places=2, max_digits=5)),
                ('leave_without_pay', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('gross_salary', models.DecimalField(decimal_places=2, max_digits=15)),
                ('total_deductions', models.DecimalField(decimal_places=2, max_digits=15)),
                ('net_salary', models.DecimalField(decimal_places=2, max_digits=15)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('processed', 'Processed'), ('paid', 'Paid'), ('cancelled', 'Cancelled')], default='draft', max_length=10)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_salary_slips', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_salary_slips', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SalarySlipDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='trueAlign.salarycomponent')),
                ('salary_slip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='trueAlign.salaryslip')),
            ],
        ),
        migrations.CreateModel(
            name='SalaryStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='employeesalary',
            name='salary_structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='trueAlign.salarystructure'),
        ),
        migrations.CreateModel(
            name='CalculationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('formula', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('applies_to', models.CharField(max_length=50)),
                ('priority', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_rules', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='updated_rules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['applies_to', 'is_active'], name='trueAlign_c_applies_e51288_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['client', 'status'], name='trueAlign_i_client__ae8f36_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['invoice_date'], name='trueAlign_i_invoice_9cb807_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['invoice'], name='trueAlign_p_invoice_df8cb4_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['entity'], name='trueAlign_p_entity__995dec_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_date'], name='trueAlign_p_payment_7a155c_idx'),
        ),
        migrations.AddIndex(
            model_name='salaryslip',
            index=models.Index(fields=['status'], name='trueAlign_s_status_c6a889_idx'),
        ),
        migrations.AddIndex(
            model_name='salaryslip',
            index=models.Index(fields=['month', 'year'], name='trueAlign_s_month_4450b1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='salaryslip',
            unique_together={('employee', 'month', 'year')},
        ),
        migrations.AddIndex(
            model_name='salarystructure',
            index=models.Index(fields=['is_active'], name='trueAlign_s_is_acti_af6d04_idx'),
        ),
    ]
